/*! ember-droplet by Adam Timberlake created on 2014-11-16 */
!function(a,b,c){"use strict";a.DropletController=b.Mixin.create({mimeTypes:["image/jpeg","image/jpg","image/gif","image/png","text/plain"],extensions:["jpeg","jpg","gif","png"],requestHeaders:{},postData:{},files:[],uploadStatus:b.computed(function(){return{uploading:!1,percentComplete:0,error:!1}}),init:function(){b.set(this,"files",[]),this._super()},actions:{addValidFile:function(a){return this._addFile(a,!0)},addInvalidFile:function(a){return this._addFile(a,!1)},deleteFile:function(a){return b.set(a,"deleted",!0),a},clearAllFiles:function(){b.set(this,"files",[])},abortUpload:function(){var a=b.get(this,"lastJqXhr");a&&b.get(this,"uploadStatus.uploading")&&(a.abort(),b.set(this,"uploadStatus.uploading",!1))},uploadAllFiles:function(){var d={fileSizeHeader:!0,useArray:!0};if(0===b.get(this,"validFiles").length)return!1;var e=b.get(this,"dropletUrl"),f=b.get(this,"dropletOptions")||d,g=this.get("postData"),h=this.get("requestHeaders");b.set(this,"uploadStatus.uploading",!0),b.set(this,"uploadStatus.error",!1),b.assert("You must specify the `dropletUrl` parameter in order to upload files.",!!e);var i=new a.FormData,j=f.useArray?"file[]":"file";b.EnumerableUtils.forEach(b.get(this,"validFiles"),function(a){i.append(j,a.file)},this);for(var k in g)g.hasOwnProperty(k)&&i.append(k,g[k]);var l={};f.fileSizeHeader&&(l["X-File-Size"]=this._getSize());for(k in h)(h.hasOwnProperty(k)||k in h)&&(l[k]=h[k]);var m=c.ajax({url:e,method:"post",data:i,headers:l,processData:!1,contentType:!1,xhr:function(){var a=c.ajaxSettings.xhr();return this._addProgressListener(a.upload),this._addSuccessListener(a.upload),this._addErrorListener(a.upload),b.set(this,"lastRequest",a),a}.bind(this)});return b.set(this,"lastJqXhr",m),new Ember.RSVP.Promise(function(a,b){m.done(a).fail(b)}).then(b.run.bind(this,function(a){return b.tryInvoke(this,"didUploadFiles",[a]),a}))}},willDestroy:function(){this._super.apply(this,arguments);var a=this.get("lastRequest");a&&(a.upload.onprogress=void 0,a.upload.onload=void 0,a.upload.onerror=void 0,this.send("abortUpload"))},validFiles:b.computed(function(){return this._filesByProperties({valid:!0,deleted:!1,uploaded:!1})}).property("files.length","files.@each.deleted","files.@each.uploaded"),invalidFiles:b.computed(function(){return this._filesByProperties({valid:!1})}).property("files.length","files.@each.deleted"),uploadedFiles:b.computed(function(){return this._filesByProperties({uploaded:!0})}).property("files.length","files.@each.uploaded"),deletedFiles:b.computed(function(){return this._filesByProperties({deleted:!0})}).property("files.length","files.@each.deleted"),_filesByProperties:function(a){return b.get(this,"files").filter(function(b){for(var c in a)if((a.hasOwnProperty(c)||c in a)&&b[c]!==a[c])return!1;return!0})},_getSize:function(){var a=0;return b.EnumerableUtils.forEach(b.get(this,"validFiles"),function(b){a+=b.file.size}),a},_addSuccessListener:function(a){a.onload=b.run.bind(this,function(){b.EnumerableUtils.forEach(b.get(this,"validFiles"),function(a){b.set(a,"uploaded",!0)}),b.set(this,"uploadStatus.uploading",!1)})},_addErrorListener:function(a){a.onerror=b.run.bind(this,function(){b.set(this,"uploadStatus.uploading",!1),b.set(this,"uploadStatus.error",!0)})},_addProgressListener:function(a){a.onprogress=b.run.bind(this,function(a){if(a.lengthComputable){var c=a.loaded/this._getSize()*100;b.set(this,"uploadStatus.percentComplete",Math.round(c))}})},_addFile:function(a,c){var d="extension-%@".fmt(a.name.match(/\.(.+)$/i)[1]).toLowerCase(),e="image/jpeg"===a.type||"image/jpg"===a.type||"image/png"===a.type||"image/gif"===a.type,f={file:a,valid:c,uploaded:!1,deleted:!1,className:d,isImage:e};return b.get(this,"files").pushObject(f),f}})}(window,window.Ember,window.jQuery),function(a,b){"use strict";var c={tagName:"input",classNames:"files",attributeBindings:["disabled","name","type","multiple"],type:"file",multiple:"multiple",change:function(){var a=this.get("element").files;return this.get("parentView").traverseFiles(a)}},d=b.copy(c);d.multiple=!1,a.DropletView=b.View.extend({classNames:["droppable"],ImagePreview:b.View.extend({tagName:"img",attributeBindings:["src"],src:null,image:null,didInsertElement:function(){var c=new a.FileReader,d=b.get(this,"image.file");return d.type.match(/^image\//i)?(c.onload=b.run.bind(this,function(a){this.get("isDestroyed")!==!0&&b.set(this,"src",a.target.result)}),void c.readAsDataURL(d)):void this.destroy()}}),MultipleInput:b.View.extend(c),SingleInput:b.View.extend(d),drop:function(a,b){return this._preventDefaultBehaviour(a),this.traverseFiles(a.dataTransfer.files||b)},traverseFiles:function(a){var c=b.get(this,"controller"),d=b.get(c,"mimeTypes"),e=b.get(c,"extensions"),f=b.get(c,"dropletOptions")||{limit:1/0};b.assert("`mimeTypes` is undefined. Does your controller implement the `$emberDropletController` mixin?",!!d),b.assert("`mimeTypes` is not an array. It should be an array of valid MIME types.",!!b.isArray(d));for(var g=0,h=a.length;h>g;g++)if(a.hasOwnProperty(g)||g in a){var i=a[g],j=i.name.split(".").pop(),k=-1===$.inArray(i.type,d)&&-1===$.inArray(j,e),l=b.get(c,"validFiles").length;k||l===f.limit?c.send("addInvalidFile",i):c.send("addValidFile",i)}return!0},_preventDefaultBehaviour:function(a){a.preventDefault(),a.stopPropagation()},dragOver:function(a){this._preventDefaultBehaviour(a)},dragEnter:function(a){this._preventDefaultBehaviour(a)},dragLeave:function(a){this._preventDefaultBehaviour(a)}})}(window,window.Ember);